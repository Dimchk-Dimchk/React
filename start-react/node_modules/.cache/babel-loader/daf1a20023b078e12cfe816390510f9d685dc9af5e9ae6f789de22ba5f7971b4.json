{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0447\\u0447\\\\Desktop\\\\Result school\\\\react-start\\\\start-react\\\\src\\\\MyComponent.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet getTimeFromDate = date => date.toISOString.slice(0, 10);\nexport const MyComponent = props => {\n  _s();\n  const [date, setDate] = useState(new Date());\n  setTimeout(() => {\n    setDate(new Date());\n  }, 1000);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: getTimeFromDate(date)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n};\n_s(MyComponent, \"rW+rxy2mJ1oFEB1Cqg4Z2uVJym0=\");\n_c = MyComponent;\nvar _c;\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","getTimeFromDate","date","toISOString","slice","MyComponent","props","_s","setDate","Date","setTimeout","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/чч/Desktop/Result school/react-start/start-react/src/MyComponent.jsx"],"sourcesContent":["import { useState } from \"react\";\n\nlet getTimeFromDate = (date) => date.toISOString.slice(0, 10);\n\nexport const MyComponent = (props) => {\n\tconst [date, setDate] = useState(new Date());\n\n\tsetTimeout (() => {\n\t\tsetDate(new Date());},\n\t\t1000);\n\n\treturn (\n\t\t<div>{getTimeFromDate(date)}</div>\n\t)\n};\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,IAAIC,eAAe,GAAIC,IAAI,IAAKA,IAAI,CAACC,WAAW,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;AAE7D,OAAO,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrC,MAAM,CAACL,IAAI,EAAEM,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAIW,IAAI,CAAC,CAAC,CAAC;EAE5CC,UAAU,CAAE,MAAM;IACjBF,OAAO,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;EAAC,CAAC,EACrB,IAAI,CAAC;EAEN,oBACCT,OAAA;IAAAW,QAAA,EAAMV,eAAe,CAACC,IAAI;EAAC;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAEpC,CAAC;AAACR,EAAA,CAVWF,WAAW;AAAAW,EAAA,GAAXX,WAAW;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}